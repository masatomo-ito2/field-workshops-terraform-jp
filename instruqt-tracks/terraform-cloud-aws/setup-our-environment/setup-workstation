#!/bin/bash
set -e

# Allow instruqt time to do its thing
sleep 10

# Source important environment variables
source /etc/profile.d/instruqt-env.sh
source /root/.bashrc

# Update Terraform
echo "Installing Terraform and command line tools."
wget https://releases.hashicorp.com/terraform/0.13.3/terraform_0.13.3_linux_amd64.zip -O /tmp/terraform.zip
unzip -o /tmp/terraform.zip -d /usr/local/bin
chmod +x /usr/local/bin/terraform

# clone the hashicat-aws repo
git clone https://github.com/hashicorp/hashicat-aws
GITDIR="/root/hashicat-aws"
/bin/set-workdir "$GITDIR"

cd ${GITDIR}
echo -e "prefix = \"yourname\"" >> ${GITDIR}/terraform.tfvars
echo -e "region = \"us-east-1\"" >> ${GITDIR}/terraform.tfvars

# Create code server config directory
mkdir -p /root/.local/share/code-server/User

# Set bash as the default shell
cat <<-EOF > /root/.local/share/code-server/User/settings.json
{
    "terminal.integrated.shell.linux": "/bin/bash",
    "terminal.integrated.fontFamily": "Inconsolata, Consolas, 'Courier New', monospace",
    "terminal.integrated.copyOnSelection": true
}
EOF

# Create VSC startup script
cat <<-EOF > /etc/systemd/system/code-server.service
[Unit]
Description=Code Server
After=network.target
StartLimitIntervalSec=0

[Service]
Type=simple
Restart=always
RestartSec=1
User=root
ExecStart=/usr/local/bin/code-server --port 8443 --cert --auth none /root/hashicat-aws

[Install]
WantedBy=multi-user.target
EOF

# Start VSC
cd /root/hashicat-aws
systemctl start code-server

# Back to our git repo and init
cd $GITDIR
terraform init

# Fix up the ~/.vimrc file
echo -e "let g:solarized_termcolors=256\nset t_Co=256\nsyntax enable\nset background=dark\ncolorscheme solarized" > /tmp/.vimrc
mv /tmp/.vimrc /root/.vimrc
chattr +i /root/.vimrc

# Ensure we load /etc/profile.d/instruqt-env.sh
echo "source /etc/profile.d/instruqt-env.sh" >> /root/.bashrc

# Create a catch-up script that enables the user to fast-forward
cat <<-EOF > /usr/bin/fastforward
#!/bin/bash
echo "******************************************************************"
echo "* Skip to Challenge Configuration Script"
echo "******************************************************************"
echo
echo "This script will set up your Terraform Cloud token and organization"
echo "configuration. Once that is done you may use the 'skip to challenge'"
echo "feature of Instruqt to fast-forward to a particular point in the"
echo "training."
echo
echo "Please enter your Terraform Cloud organization name."
read ORG
echo
echo "Please enter your workspace name."
read WORKSPACE
echo
echo "Please enter your Terraform Cloud user token."
read TOKEN
echo
echo "Please enter your GitHub user name."
read GITUSER
echo
echo "Please enter your oauth-id. You can find it at this URL:"
echo "https://app.terraform.io/app/${ORG}/settings/version-control"
echo "If you haven't set up VCS integration yet, simply hit enter."
read OAUTHID
echo
echo "Organization: \$ORG"
echo "Workspace   : \$WORKSPACE"
echo "Token       : \$TOKEN"
echo "GitHub User : \$GITUSER"
echo "OAuth ID    : \$OAUTHID"
echo
read -p "Do these look right to you? Y/n " -n 1 -r
echo
if [[ ! \$REPLY =~ ^[Yy]\$ ]]
then
  echo "Please try again."
  exit 1
fi
echo
echo "Saving your settings in /root/skipconfig.json"
cat <<-EOM > /root/skipconfig.json
{
  "org": "\$ORG",
  "workspace": "\$WORKSPACE",
  "token": "\$TOKEN",
  "gituser": "\$GITUSER",
  "oauthid": "\$OAUTHID"
}
EOM

ponysay -f twilight -f applejack -f rainbow -f pinkie -f rarity -f fluttershy "Ready to Skip Challenges!"

EOF

chmod +x /usr/bin/fastforward
